{
  "{\"sourceRoot\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server\",\"filename\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/rabea/Desktop/Git/location_visualizer/src/server",
      "filename": "/Users/rabea/Desktop/Git/location_visualizer/src/server/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rabea/Desktop/Git/location_visualizer/src/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rabea/Desktop/Git/location_visualizer/src/server/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rabea/Desktop/Git/location_visualizer/src/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _points = _interopRequireDefault(require(\"./api/points\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar API_PORT = 3001;\nvar app = (0, _express.default)();\napp.use((0, _cors.default)());\n\nvar router = _express.default.Router(); // this is our MongoDB database\n\n\nvar dbRoute = 'mongodb+srv://rabeashamaly:rabeashamaly@cluster0-q1h8e.mongodb.net/in-door-locations?retryWrites=true&w=majority'; // connects our back end code with the database\n\n_mongoose.default.connect(dbRoute, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nvar db = _mongoose.default.connection;\ndb.once('open', function () {\n  return console.log('connected to the database');\n}); // checks if connection with the database is successful\n\ndb.on('error', console.error.bind(console, 'MongoDB connection error:')); //create an index to handle finding the points faster\n\ndb.collections.points.createIndex({\n  floor_id: 1,\n  start_date: 1,\n  end_date: 1\n}); // (optional) only made for logging and\n// bodyParser, parses the request body to be a readable json format\n\napp.use(_bodyParser.default.urlencoded({\n  extended: false\n}));\napp.use(_bodyParser.default.json());\napp.use((0, _morgan.default)('dev')); // this is our get method\n// this method fetches all available data in our database\n\napp.get('/api/getPoints', _points.default.getPoints);\napp.get('/api/getPointsByFloor', _points.default.getPointsByFloor); // this is our add method\n\napp.post('/api/addPoint', _points.default.addPoint); // this is our delete method\n// this method removes existing data in our database\n// router.delete('/deleteData', (req, res) => {\n//     const { id } = req.body;\n//     Data.findByIdAndRemove(id, (err) => {\n//         if (err) return res.send(err);\n//         return res.json({ success: true });\n//     });\n// });\n// append /api for our http requests\n\napp.use('/api', router); // launch our backend into a port\n\napp.listen(API_PORT, function () {\n  return console.log(\"LISTENING ON PORT \".concat(API_PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJBUElfUE9SVCIsImFwcCIsInVzZSIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJkYlJvdXRlIiwibW9uZ29vc2UiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJjb25uZWN0aW9uIiwib25jZSIsImNvbnNvbGUiLCJsb2ciLCJvbiIsImVycm9yIiwiYmluZCIsImNvbGxlY3Rpb25zIiwicG9pbnRzIiwiY3JlYXRlSW5kZXgiLCJmbG9vcl9pZCIsInN0YXJ0X2RhdGUiLCJlbmRfZGF0ZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZ2V0IiwiUG9pbnRBcGkiLCJnZXRQb2ludHMiLCJnZXRQb2ludHNCeUZsb29yIiwicG9zdCIsImFkZFBvaW50IiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLElBQWpCO0FBQ0EsSUFBTUMsR0FBRyxHQUFHLHVCQUFaO0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLG9CQUFSOztBQUNBLElBQU1DLE1BQU0sR0FBR0MsaUJBQVFDLE1BQVIsRUFBZixDLENBRUE7OztBQUNBLElBQU1DLE9BQU8sR0FDVCxrSEFESixDLENBR0E7O0FBQ0FDLGtCQUFTQyxPQUFULENBQWlCRixPQUFqQixFQUEwQjtBQUFFRyxFQUFBQSxlQUFlLEVBQUUsSUFBbkI7QUFBeUJDLEVBQUFBLGtCQUFrQixFQUFFO0FBQTdDLENBQTFCOztBQUVBLElBQUlDLEVBQUUsR0FBR0osa0JBQVNLLFVBQWxCO0FBRUFELEVBQUUsQ0FBQ0UsSUFBSCxDQUFRLE1BQVIsRUFBZ0I7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBWixDQUFOO0FBQUEsQ0FBaEIsRSxDQUVBOztBQUNBSixFQUFFLENBQUNLLEVBQUgsQ0FBTSxPQUFOLEVBQWVGLE9BQU8sQ0FBQ0csS0FBUixDQUFjQyxJQUFkLENBQW1CSixPQUFuQixFQUE0QiwyQkFBNUIsQ0FBZixFLENBRUE7O0FBQ0FILEVBQUUsQ0FBQ1EsV0FBSCxDQUFlQyxNQUFmLENBQXNCQyxXQUF0QixDQUFtQztBQUFFQyxFQUFBQSxRQUFRLEVBQUUsQ0FBWjtBQUFnQkMsRUFBQUEsVUFBVSxFQUFFLENBQTVCO0FBQStCQyxFQUFBQSxRQUFRLEVBQUU7QUFBekMsQ0FBbkMsRSxDQUVBO0FBQ0E7O0FBQ0F2QixHQUFHLENBQUNDLEdBQUosQ0FBUXVCLG9CQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQTFCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRdUIsb0JBQVdHLElBQVgsRUFBUjtBQUNBM0IsR0FBRyxDQUFDQyxHQUFKLENBQVEscUJBQU8sS0FBUCxDQUFSLEUsQ0FFQTtBQUNBOztBQUNBRCxHQUFHLENBQUM0QixHQUFKLENBQVEsZ0JBQVIsRUFBMEJDLGdCQUFTQyxTQUFuQztBQUVBOUIsR0FBRyxDQUFDNEIsR0FBSixDQUFRLHVCQUFSLEVBQWlDQyxnQkFBU0UsZ0JBQTFDLEUsQ0FDQTs7QUFDQS9CLEdBQUcsQ0FBQ2dDLElBQUosQ0FBUyxlQUFULEVBQTBCSCxnQkFBU0ksUUFBbkMsRSxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUNBakMsR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQkMsTUFBaEIsRSxDQUVBOztBQUNBRixHQUFHLENBQUNrQyxNQUFKLENBQVduQyxRQUFYLEVBQXFCO0FBQUEsU0FBTWMsT0FBTyxDQUFDQyxHQUFSLDZCQUFpQ2YsUUFBakMsRUFBTjtBQUFBLENBQXJCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYWJlYS9EZXNrdG9wL0dpdC9sb2NhdGlvbl92aXN1YWxpemVyL3NyYy9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XHJcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XHJcbmltcG9ydCBsb2dnZXIgZnJvbSAnbW9yZ2FuJztcclxuaW1wb3J0IFBvaW50QXBpIGZyb20gJy4vYXBpL3BvaW50cyc7XHJcblxyXG5jb25zdCBBUElfUE9SVCA9IDMwMDE7XHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuLy8gdGhpcyBpcyBvdXIgTW9uZ29EQiBkYXRhYmFzZVxyXG5jb25zdCBkYlJvdXRlID1cclxuICAgICdtb25nb2RiK3NydjovL3JhYmVhc2hhbWFseTpyYWJlYXNoYW1hbHlAY2x1c3RlcjAtcTFoOGUubW9uZ29kYi5uZXQvaW4tZG9vci1sb2NhdGlvbnM/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5JztcclxuXHJcbi8vIGNvbm5lY3RzIG91ciBiYWNrIGVuZCBjb2RlIHdpdGggdGhlIGRhdGFiYXNlXHJcbm1vbmdvb3NlLmNvbm5lY3QoZGJSb3V0ZSwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KTtcclxuXHJcbmxldCBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XHJcblxyXG5kYi5vbmNlKCdvcGVuJywgKCkgPT4gY29uc29sZS5sb2coJ2Nvbm5lY3RlZCB0byB0aGUgZGF0YWJhc2UnKSk7XHJcblxyXG4vLyBjaGVja3MgaWYgY29ubmVjdGlvbiB3aXRoIHRoZSBkYXRhYmFzZSBpcyBzdWNjZXNzZnVsXHJcbmRiLm9uKCdlcnJvcicsIGNvbnNvbGUuZXJyb3IuYmluZChjb25zb2xlLCAnTW9uZ29EQiBjb25uZWN0aW9uIGVycm9yOicpKTtcclxuXHJcbi8vY3JlYXRlIGFuIGluZGV4IHRvIGhhbmRsZSBmaW5kaW5nIHRoZSBwb2ludHMgZmFzdGVyXHJcbmRiLmNvbGxlY3Rpb25zLnBvaW50cy5jcmVhdGVJbmRleCggeyBmbG9vcl9pZDogMSwgIHN0YXJ0X2RhdGU6IDEsIGVuZF9kYXRlOiAxfSApO1xyXG5cclxuLy8gKG9wdGlvbmFsKSBvbmx5IG1hZGUgZm9yIGxvZ2dpbmcgYW5kXHJcbi8vIGJvZHlQYXJzZXIsIHBhcnNlcyB0aGUgcmVxdWVzdCBib2R5IHRvIGJlIGEgcmVhZGFibGUganNvbiBmb3JtYXRcclxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuYXBwLnVzZShsb2dnZXIoJ2RldicpKTtcclxuXHJcbi8vIHRoaXMgaXMgb3VyIGdldCBtZXRob2RcclxuLy8gdGhpcyBtZXRob2QgZmV0Y2hlcyBhbGwgYXZhaWxhYmxlIGRhdGEgaW4gb3VyIGRhdGFiYXNlXHJcbmFwcC5nZXQoJy9hcGkvZ2V0UG9pbnRzJywgUG9pbnRBcGkuZ2V0UG9pbnRzKTtcclxuXHJcbmFwcC5nZXQoJy9hcGkvZ2V0UG9pbnRzQnlGbG9vcicsIFBvaW50QXBpLmdldFBvaW50c0J5Rmxvb3IpXHJcbi8vIHRoaXMgaXMgb3VyIGFkZCBtZXRob2RcclxuYXBwLnBvc3QoJy9hcGkvYWRkUG9pbnQnLCBQb2ludEFwaS5hZGRQb2ludCk7XHJcblxyXG4vLyB0aGlzIGlzIG91ciBkZWxldGUgbWV0aG9kXHJcbi8vIHRoaXMgbWV0aG9kIHJlbW92ZXMgZXhpc3RpbmcgZGF0YSBpbiBvdXIgZGF0YWJhc2VcclxuLy8gcm91dGVyLmRlbGV0ZSgnL2RlbGV0ZURhdGEnLCAocmVxLCByZXMpID0+IHtcclxuLy8gICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5ib2R5O1xyXG4vLyAgICAgRGF0YS5maW5kQnlJZEFuZFJlbW92ZShpZCwgKGVycikgPT4ge1xyXG4vLyAgICAgICAgIGlmIChlcnIpIHJldHVybiByZXMuc2VuZChlcnIpO1xyXG4vLyAgICAgICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUgfSk7XHJcbi8vICAgICB9KTtcclxuLy8gfSk7XHJcblxyXG4vLyBhcHBlbmQgL2FwaSBmb3Igb3VyIGh0dHAgcmVxdWVzdHNcclxuYXBwLnVzZSgnL2FwaScsIHJvdXRlcik7XHJcblxyXG4vLyBsYXVuY2ggb3VyIGJhY2tlbmQgaW50byBhIHBvcnRcclxuYXBwLmxpc3RlbihBUElfUE9SVCwgKCkgPT4gY29uc29sZS5sb2coYExJU1RFTklORyBPTiBQT1JUICR7QVBJX1BPUlR9YCkpO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "API_PORT",
        "app",
        "use",
        "router",
        "express",
        "Router",
        "dbRoute",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "connection",
        "once",
        "console",
        "log",
        "on",
        "error",
        "bind",
        "collections",
        "points",
        "createIndex",
        "floor_id",
        "start_date",
        "end_date",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "get",
        "PointApi",
        "getPoints",
        "getPointsByFloor",
        "post",
        "addPoint",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,QAAQ,GAAG,IAAjB;AACA,IAAMC,GAAG,GAAG,uBAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR;;AACA,IAAMC,MAAM,GAAGC,iBAAQC,MAAR,EAAf,C,CAEA;;;AACA,IAAMC,OAAO,GACT,kHADJ,C,CAGA;;AACAC,kBAASC,OAAT,CAAiBF,OAAjB,EAA0B;AAAEG,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAA1B;;AAEA,IAAIC,EAAE,GAAGJ,kBAASK,UAAlB;AAEAD,EAAE,CAACE,IAAH,CAAQ,MAAR,EAAgB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAN;AAAA,CAAhB,E,CAEA;;AACAJ,EAAE,CAACK,EAAH,CAAM,OAAN,EAAeF,OAAO,CAACG,KAAR,CAAcC,IAAd,CAAmBJ,OAAnB,EAA4B,2BAA5B,CAAf,E,CAEA;;AACAH,EAAE,CAACQ,WAAH,CAAeC,MAAf,CAAsBC,WAAtB,CAAmC;AAAEC,EAAAA,QAAQ,EAAE,CAAZ;AAAgBC,EAAAA,UAAU,EAAE,CAA5B;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CAAnC,E,CAEA;AACA;;AACAvB,GAAG,CAACC,GAAJ,CAAQuB,oBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACA1B,GAAG,CAACC,GAAJ,CAAQuB,oBAAWG,IAAX,EAAR;AACA3B,GAAG,CAACC,GAAJ,CAAQ,qBAAO,KAAP,CAAR,E,CAEA;AACA;;AACAD,GAAG,CAAC4B,GAAJ,CAAQ,gBAAR,EAA0BC,gBAASC,SAAnC;AAEA9B,GAAG,CAAC4B,GAAJ,CAAQ,uBAAR,EAAiCC,gBAASE,gBAA1C,E,CACA;;AACA/B,GAAG,CAACgC,IAAJ,CAAS,eAAT,EAA0BH,gBAASI,QAAnC,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAjC,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,MAAhB,E,CAEA;;AACAF,GAAG,CAACkC,MAAJ,CAAWnC,QAAX,EAAqB;AAAA,SAAMc,OAAO,CAACC,GAAR,6BAAiCf,QAAjC,EAAN;AAAA,CAArB",
      "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/",
      "sourcesContent": [
        "import cors from 'cors';\r\nimport mongoose from 'mongoose';\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport logger from 'morgan';\r\nimport PointApi from './api/points';\r\n\r\nconst API_PORT = 3001;\r\nconst app = express();\r\napp.use(cors());\r\nconst router = express.Router();\r\n\r\n// this is our MongoDB database\r\nconst dbRoute =\r\n    'mongodb+srv://rabeashamaly:rabeashamaly@cluster0-q1h8e.mongodb.net/in-door-locations?retryWrites=true&w=majority';\r\n\r\n// connects our back end code with the database\r\nmongoose.connect(dbRoute, { useNewUrlParser: true, useUnifiedTopology: true });\r\n\r\nlet db = mongoose.connection;\r\n\r\ndb.once('open', () => console.log('connected to the database'));\r\n\r\n// checks if connection with the database is successful\r\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\n//create an index to handle finding the points faster\r\ndb.collections.points.createIndex( { floor_id: 1,  start_date: 1, end_date: 1} );\r\n\r\n// (optional) only made for logging and\r\n// bodyParser, parses the request body to be a readable json format\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\napp.use(logger('dev'));\r\n\r\n// this is our get method\r\n// this method fetches all available data in our database\r\napp.get('/api/getPoints', PointApi.getPoints);\r\n\r\napp.get('/api/getPointsByFloor', PointApi.getPointsByFloor)\r\n// this is our add method\r\napp.post('/api/addPoint', PointApi.addPoint);\r\n\r\n// this is our delete method\r\n// this method removes existing data in our database\r\n// router.delete('/deleteData', (req, res) => {\r\n//     const { id } = req.body;\r\n//     Data.findByIdAndRemove(id, (err) => {\r\n//         if (err) return res.send(err);\r\n//         return res.json({ success: true });\r\n//     });\r\n// });\r\n\r\n// append /api for our http requests\r\napp.use('/api', router);\r\n\r\n// launch our backend into a port\r\napp.listen(API_PORT, () => console.log(`LISTENING ON PORT ${API_PORT}`));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598461456256
  },
  "{\"sourceRoot\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server/api/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server\",\"filename\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server/api/points.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/api/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/rabea/Desktop/Git/location_visualizer/src/server",
      "filename": "/Users/rabea/Desktop/Git/location_visualizer/src/server/api/points.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rabea/Desktop/Git/location_visualizer/src/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rabea/Desktop/Git/location_visualizer/src/server/api/points.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rabea/Desktop/Git/location_visualizer/src/server/api/points.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/api/",
        "sourceFileName": "points.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _httpStatusCodes = require(\"http-status-codes\");\n\nrequire(\"regenerator-runtime/runtime.js\");\n\nvar _Point = _interopRequireDefault(require(\"../models/Point\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PointsApi = /*#__PURE__*/function () {\n  function PointsApi() {\n    _classCallCheck(this, PointsApi);\n  }\n\n  _createClass(PointsApi, null, [{\n    key: \"getPoints\",\n    value: function getPoints(req, res) {\n      _Point.default.find({}, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(err, points) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!err) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  res.status(_httpStatusCodes.INTERNAL_SERVER_ERROR).send(err);\n                  return _context.abrupt(\"return\");\n\n                case 3:\n                  if (points) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  res.send({});\n                  return _context.abrupt(\"return\");\n\n                case 6:\n                  res.send(points);\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"getPointsByFloor\",\n    value: function getPointsByFloor(req, res) {\n      var floor_id = req.query.floor_id;\n      var current = req.query.current;\n      var next = req.query.next;\n\n      _Point.default.find({\n        floor_id: floor_id,\n        $or: [{\n          start_time: {\n            $gte: current,\n            $lte: next\n          }\n        }, {\n          end_time: {\n            $gte: current,\n            $lte: next\n          }\n        }]\n      }, /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(err, points) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!err) {\n                    _context2.next = 3;\n                    break;\n                  }\n\n                  res.status(_httpStatusCodes.INTERNAL_SERVER_ERROR).send(err);\n                  return _context2.abrupt(\"return\");\n\n                case 3:\n                  if (points) {\n                    _context2.next = 6;\n                    break;\n                  }\n\n                  res.send({});\n                  return _context2.abrupt(\"return\");\n\n                case 6:\n                  res.send(points);\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"addPoint\",\n    value: function addPoint(req, res) {\n      var _req$body = req.body,\n          id_number = _req$body.id_number,\n          badge_type_desc = _req$body.badge_type_desc,\n          start_date = _req$body.start_date,\n          end_date = _req$body.end_date,\n          x = _req$body.x,\n          y = _req$body.y,\n          room = _req$body.room,\n          floor_id = _req$body.floor_id,\n          x_start_time = _req$body.x_start_time,\n          x_end_time = _req$body.x_end_time;\n\n      _Point.default.create({\n        id_number: id_number,\n        badge_type_desc: badge_type_desc,\n        start_date: start_date,\n        end_date: end_date,\n        x: x,\n        y: y,\n        room: room,\n        floor_id: floor_id,\n        x_start_time: x_start_time,\n        x_end_time: x_end_time\n      }, function (err) {\n        if (err) {\n          res.status(_httpStatusCodes.INTERNAL_SERVER_ERROR).send(err);\n        } else {\n          res.status(_httpStatusCodes.CREATED).send();\n        }\n      });\n    }\n  }]);\n\n  return PointsApi;\n}();\n\nmodule.exports = PointsApi;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvaW50cy5qcyJdLCJuYW1lcyI6WyJQb2ludHNBcGkiLCJyZXEiLCJyZXMiLCJQb2ludCIsImZpbmQiLCJlcnIiLCJwb2ludHMiLCJzdGF0dXMiLCJJTlRFUk5BTF9TRVJWRVJfRVJST1IiLCJzZW5kIiwiZmxvb3JfaWQiLCJxdWVyeSIsImN1cnJlbnQiLCJuZXh0IiwiJG9yIiwic3RhcnRfdGltZSIsIiRndGUiLCIkbHRlIiwiZW5kX3RpbWUiLCJib2R5IiwiaWRfbnVtYmVyIiwiYmFkZ2VfdHlwZV9kZXNjIiwic3RhcnRfZGF0ZSIsImVuZF9kYXRlIiwieCIsInkiLCJyb29tIiwieF9zdGFydF90aW1lIiwieF9lbmRfdGltZSIsImNyZWF0ZSIsIkNSRUFURUQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7OztJQUVNQSxTOzs7Ozs7OzhCQUNlQyxHLEVBQUtDLEcsRUFBSztBQUN2QkMscUJBQU1DLElBQU4sQ0FBVyxFQUFYO0FBQUEsMkVBQWUsaUJBQU9DLEdBQVAsRUFBWUMsTUFBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBQ1BELEdBRE87QUFBQTtBQUFBO0FBQUE7O0FBRVBILGtCQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBV0Msc0NBQVgsRUFBa0NDLElBQWxDLENBQXVDSixHQUF2QztBQUZPOztBQUFBO0FBQUEsc0JBS05DLE1BTE07QUFBQTtBQUFBO0FBQUE7O0FBTVBKLGtCQUFBQSxHQUFHLENBQUNPLElBQUosQ0FBUyxFQUFUO0FBTk87O0FBQUE7QUFTWFAsa0JBQUFBLEdBQUcsQ0FBQ08sSUFBSixDQUFTSCxNQUFUOztBQVRXO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBQWY7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFXSDs7O3FDQUV1QkwsRyxFQUFLQyxHLEVBQUs7QUFDOUIsVUFBTVEsUUFBUSxHQUFHVCxHQUFHLENBQUNVLEtBQUosQ0FBVUQsUUFBM0I7QUFDQSxVQUFNRSxPQUFPLEdBQUdYLEdBQUcsQ0FBQ1UsS0FBSixDQUFVQyxPQUExQjtBQUNBLFVBQU1DLElBQUksR0FBR1osR0FBRyxDQUFDVSxLQUFKLENBQVVFLElBQXZCOztBQUNBVixxQkFBTUMsSUFBTixDQUFXO0FBQUNNLFFBQUFBLFFBQVEsRUFBUkEsUUFBRDtBQUFXSSxRQUFBQSxHQUFHLEVBQUMsQ0FBQztBQUFDQyxVQUFBQSxVQUFVLEVBQUU7QUFBQ0MsWUFBQUEsSUFBSSxFQUFFSixPQUFQO0FBQWdCSyxZQUFBQSxJQUFJLEVBQUVKO0FBQXRCO0FBQWIsU0FBRCxFQUE0QztBQUFDSyxVQUFBQSxRQUFRLEVBQUU7QUFBQ0YsWUFBQUEsSUFBSSxFQUFFSixPQUFQO0FBQWdCSyxZQUFBQSxJQUFJLEVBQUVKO0FBQXRCO0FBQVgsU0FBNUM7QUFBZixPQUFYO0FBQUEsNEVBQWlILGtCQUFPUixHQUFQLEVBQVlDLE1BQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUN6R0QsR0FEeUc7QUFBQTtBQUFBO0FBQUE7O0FBRXpHSCxrQkFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVdDLHNDQUFYLEVBQWtDQyxJQUFsQyxDQUF1Q0osR0FBdkM7QUFGeUc7O0FBQUE7QUFBQSxzQkFLeEdDLE1BTHdHO0FBQUE7QUFBQTtBQUFBOztBQU16R0osa0JBQUFBLEdBQUcsQ0FBQ08sSUFBSixDQUFTLEVBQVQ7QUFOeUc7O0FBQUE7QUFTN0dQLGtCQUFBQSxHQUFHLENBQUNPLElBQUosQ0FBU0gsTUFBVDs7QUFUNkc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FBakg7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFXSDs7OzZCQUVlTCxHLEVBQUtDLEcsRUFBSztBQUFBLHNCQUVVRCxHQUFHLENBQUNrQixJQUZkO0FBQUEsVUFDZkMsU0FEZSxhQUNmQSxTQURlO0FBQUEsVUFDSkMsZUFESSxhQUNKQSxlQURJO0FBQUEsVUFDYUMsVUFEYixhQUNhQSxVQURiO0FBQUEsVUFDeUJDLFFBRHpCLGFBQ3lCQSxRQUR6QjtBQUFBLFVBQ21DQyxDQURuQyxhQUNtQ0EsQ0FEbkM7QUFBQSxVQUNzQ0MsQ0FEdEMsYUFDc0NBLENBRHRDO0FBQUEsVUFDeUNDLElBRHpDLGFBQ3lDQSxJQUR6QztBQUFBLFVBQytDaEIsUUFEL0MsYUFDK0NBLFFBRC9DO0FBQUEsVUFFbEJpQixZQUZrQixhQUVsQkEsWUFGa0I7QUFBQSxVQUVKQyxVQUZJLGFBRUpBLFVBRkk7O0FBR3RCekIscUJBQU0wQixNQUFOLENBQWE7QUFBRVQsUUFBQUEsU0FBUyxFQUFUQSxTQUFGO0FBQWFDLFFBQUFBLGVBQWUsRUFBZkEsZUFBYjtBQUE4QkMsUUFBQUEsVUFBVSxFQUFWQSxVQUE5QjtBQUEwQ0MsUUFBQUEsUUFBUSxFQUFSQSxRQUExQztBQUFvREMsUUFBQUEsQ0FBQyxFQUFEQSxDQUFwRDtBQUF1REMsUUFBQUEsQ0FBQyxFQUFEQSxDQUF2RDtBQUEwREMsUUFBQUEsSUFBSSxFQUFKQSxJQUExRDtBQUFnRWhCLFFBQUFBLFFBQVEsRUFBUkEsUUFBaEU7QUFDVGlCLFFBQUFBLFlBQVksRUFBWkEsWUFEUztBQUNLQyxRQUFBQSxVQUFVLEVBQVZBO0FBREwsT0FBYixFQUNnQyxVQUFDdkIsR0FBRCxFQUFTO0FBQ3JDLFlBQUlBLEdBQUosRUFBUztBQUNMSCxVQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBV0Msc0NBQVgsRUFBa0NDLElBQWxDLENBQXVDSixHQUF2QztBQUNILFNBRkQsTUFFTztBQUNISCxVQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBV3VCLHdCQUFYLEVBQW9CckIsSUFBcEI7QUFDSDtBQUNKLE9BUEQ7QUFRSDs7Ozs7O0FBS0xzQixNQUFNLENBQUNDLE9BQVAsR0FBaUJoQyxTQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmFiZWEvRGVza3RvcC9HaXQvbG9jYXRpb25fdmlzdWFsaXplci9zcmMvc2VydmVyL2FwaS8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0lOVEVSTkFMX1NFUlZFUl9FUlJPUiwgQ1JFQVRFRH0gZnJvbSAnaHR0cC1zdGF0dXMtY29kZXMnO1xyXG5pbXBvcnQgXCJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanNcIjtcclxuaW1wb3J0IFBvaW50IGZyb20gJy4uL21vZGVscy9Qb2ludCc7XHJcblxyXG5jbGFzcyBQb2ludHNBcGkge1xyXG4gICAgc3RhdGljIGdldFBvaW50cyhyZXEsIHJlcykge1xyXG4gICAgICAgIFBvaW50LmZpbmQoe30sIGFzeW5jIChlcnIsIHBvaW50cykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKElOVEVSTkFMX1NFUlZFUl9FUlJPUikuc2VuZChlcnIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghcG9pbnRzKSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc2VuZCh7fSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmVzLnNlbmQocG9pbnRzKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgc3RhdGljIGdldFBvaW50c0J5Rmxvb3IocmVxLCByZXMpIHtcclxuICAgICAgICBjb25zdCBmbG9vcl9pZCA9IHJlcS5xdWVyeS5mbG9vcl9pZDtcclxuICAgICAgICBjb25zdCBjdXJyZW50ID0gcmVxLnF1ZXJ5LmN1cnJlbnQ7XHJcbiAgICAgICAgY29uc3QgbmV4dCA9IHJlcS5xdWVyeS5uZXh0O1xyXG4gICAgICAgIFBvaW50LmZpbmQoe2Zsb29yX2lkLCAkb3I6W3tzdGFydF90aW1lOiB7JGd0ZTogY3VycmVudCwgJGx0ZTogbmV4dH19LCB7ZW5kX3RpbWU6IHskZ3RlOiBjdXJyZW50LCAkbHRlOiBuZXh0fX1dfSwgYXN5bmMgKGVyciwgcG9pbnRzKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoSU5URVJOQUxfU0VSVkVSX0VSUk9SKS5zZW5kKGVycik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCFwb2ludHMpIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zZW5kKHt9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXMuc2VuZChwb2ludHMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBhZGRQb2ludChyZXEsIHJlcykge1xyXG4gICAgICAgIGNvbnN0IHtpZF9udW1iZXIsIGJhZGdlX3R5cGVfZGVzYywgc3RhcnRfZGF0ZSwgZW5kX2RhdGUsIHgsIHksIHJvb20sIGZsb29yX2lkLFxyXG4gICAgICAgICAgICB4X3N0YXJ0X3RpbWUsIHhfZW5kX3RpbWV9ID0gcmVxLmJvZHk7XHJcbiAgICAgICAgUG9pbnQuY3JlYXRlKHsgaWRfbnVtYmVyLCBiYWRnZV90eXBlX2Rlc2MsIHN0YXJ0X2RhdGUsIGVuZF9kYXRlLCB4LCB5LCByb29tLCBmbG9vcl9pZCxcclxuICAgICAgICAgICAgeF9zdGFydF90aW1lLCB4X2VuZF90aW1lIH0sIChlcnIpID0+IHtcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyhJTlRFUk5BTF9TRVJWRVJfRVJST1IpLnNlbmQoZXJyKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoQ1JFQVRFRCkuc2VuZCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQb2ludHNBcGk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "points.js"
      ],
      "names": [
        "PointsApi",
        "req",
        "res",
        "Point",
        "find",
        "err",
        "points",
        "status",
        "INTERNAL_SERVER_ERROR",
        "send",
        "floor_id",
        "query",
        "current",
        "next",
        "$or",
        "start_time",
        "$gte",
        "$lte",
        "end_time",
        "body",
        "id_number",
        "badge_type_desc",
        "start_date",
        "end_date",
        "x",
        "y",
        "room",
        "x_start_time",
        "x_end_time",
        "create",
        "CREATED",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;;;;;;;;;;;IAEMA,S;;;;;;;8BACeC,G,EAAKC,G,EAAK;AACvBC,qBAAMC,IAAN,CAAW,EAAX;AAAA,2EAAe,iBAAOC,GAAP,EAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,uBACPD,GADO;AAAA;AAAA;AAAA;;AAEPH,kBAAAA,GAAG,CAACK,MAAJ,CAAWC,sCAAX,EAAkCC,IAAlC,CAAuCJ,GAAvC;AAFO;;AAAA;AAAA,sBAKNC,MALM;AAAA;AAAA;AAAA;;AAMPJ,kBAAAA,GAAG,CAACO,IAAJ,CAAS,EAAT;AANO;;AAAA;AASXP,kBAAAA,GAAG,CAACO,IAAJ,CAASH,MAAT;;AATW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;AAAA;AAWH;;;qCAEuBL,G,EAAKC,G,EAAK;AAC9B,UAAMQ,QAAQ,GAAGT,GAAG,CAACU,KAAJ,CAAUD,QAA3B;AACA,UAAME,OAAO,GAAGX,GAAG,CAACU,KAAJ,CAAUC,OAA1B;AACA,UAAMC,IAAI,GAAGZ,GAAG,CAACU,KAAJ,CAAUE,IAAvB;;AACAV,qBAAMC,IAAN,CAAW;AAACM,QAAAA,QAAQ,EAARA,QAAD;AAAWI,QAAAA,GAAG,EAAC,CAAC;AAACC,UAAAA,UAAU,EAAE;AAACC,YAAAA,IAAI,EAAEJ,OAAP;AAAgBK,YAAAA,IAAI,EAAEJ;AAAtB;AAAb,SAAD,EAA4C;AAACK,UAAAA,QAAQ,EAAE;AAACF,YAAAA,IAAI,EAAEJ,OAAP;AAAgBK,YAAAA,IAAI,EAAEJ;AAAtB;AAAX,SAA5C;AAAf,OAAX;AAAA,4EAAiH,kBAAOR,GAAP,EAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,uBACzGD,GADyG;AAAA;AAAA;AAAA;;AAEzGH,kBAAAA,GAAG,CAACK,MAAJ,CAAWC,sCAAX,EAAkCC,IAAlC,CAAuCJ,GAAvC;AAFyG;;AAAA;AAAA,sBAKxGC,MALwG;AAAA;AAAA;AAAA;;AAMzGJ,kBAAAA,GAAG,CAACO,IAAJ,CAAS,EAAT;AANyG;;AAAA;AAS7GP,kBAAAA,GAAG,CAACO,IAAJ,CAASH,MAAT;;AAT6G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjH;;AAAA;AAAA;AAAA;AAAA;AAWH;;;6BAEeL,G,EAAKC,G,EAAK;AAAA,sBAEUD,GAAG,CAACkB,IAFd;AAAA,UACfC,SADe,aACfA,SADe;AAAA,UACJC,eADI,aACJA,eADI;AAAA,UACaC,UADb,aACaA,UADb;AAAA,UACyBC,QADzB,aACyBA,QADzB;AAAA,UACmCC,CADnC,aACmCA,CADnC;AAAA,UACsCC,CADtC,aACsCA,CADtC;AAAA,UACyCC,IADzC,aACyCA,IADzC;AAAA,UAC+ChB,QAD/C,aAC+CA,QAD/C;AAAA,UAElBiB,YAFkB,aAElBA,YAFkB;AAAA,UAEJC,UAFI,aAEJA,UAFI;;AAGtBzB,qBAAM0B,MAAN,CAAa;AAAET,QAAAA,SAAS,EAATA,SAAF;AAAaC,QAAAA,eAAe,EAAfA,eAAb;AAA8BC,QAAAA,UAAU,EAAVA,UAA9B;AAA0CC,QAAAA,QAAQ,EAARA,QAA1C;AAAoDC,QAAAA,CAAC,EAADA,CAApD;AAAuDC,QAAAA,CAAC,EAADA,CAAvD;AAA0DC,QAAAA,IAAI,EAAJA,IAA1D;AAAgEhB,QAAAA,QAAQ,EAARA,QAAhE;AACTiB,QAAAA,YAAY,EAAZA,YADS;AACKC,QAAAA,UAAU,EAAVA;AADL,OAAb,EACgC,UAACvB,GAAD,EAAS;AACrC,YAAIA,GAAJ,EAAS;AACLH,UAAAA,GAAG,CAACK,MAAJ,CAAWC,sCAAX,EAAkCC,IAAlC,CAAuCJ,GAAvC;AACH,SAFD,MAEO;AACHH,UAAAA,GAAG,CAACK,MAAJ,CAAWuB,wBAAX,EAAoBrB,IAApB;AACH;AACJ,OAPD;AAQH;;;;;;AAKLsB,MAAM,CAACC,OAAP,GAAiBhC,SAAjB",
      "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/api/",
      "sourcesContent": [
        "import {INTERNAL_SERVER_ERROR, CREATED} from 'http-status-codes';\r\nimport \"regenerator-runtime/runtime.js\";\r\nimport Point from '../models/Point';\r\n\r\nclass PointsApi {\r\n    static getPoints(req, res) {\r\n        Point.find({}, async (err, points) => {\r\n            if (err) {\r\n                res.status(INTERNAL_SERVER_ERROR).send(err);\r\n                return;\r\n            }\r\n            if (!points) {\r\n                res.send({});\r\n                return;\r\n            }\r\n            res.send(points);\r\n        });\r\n    }\r\n    \r\n    static getPointsByFloor(req, res) {\r\n        const floor_id = req.query.floor_id;\r\n        const current = req.query.current;\r\n        const next = req.query.next;\r\n        Point.find({floor_id, $or:[{start_time: {$gte: current, $lte: next}}, {end_time: {$gte: current, $lte: next}}]}, async (err, points) => {\r\n            if (err) {\r\n                res.status(INTERNAL_SERVER_ERROR).send(err);\r\n                return;\r\n            }\r\n            if (!points) {\r\n                res.send({});\r\n                return;\r\n            }\r\n            res.send(points);\r\n        });\r\n    }\r\n\r\n    static addPoint(req, res) {\r\n        const {id_number, badge_type_desc, start_date, end_date, x, y, room, floor_id,\r\n            x_start_time, x_end_time} = req.body;\r\n        Point.create({ id_number, badge_type_desc, start_date, end_date, x, y, room, floor_id,\r\n            x_start_time, x_end_time }, (err) => {\r\n            if (err) {\r\n                res.status(INTERNAL_SERVER_ERROR).send(err);\r\n            } else {\r\n                res.status(CREATED).send();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = PointsApi;"
      ]
    },
    "sourceType": "script",
    "mtime": 1591466272396
  },
  "{\"sourceRoot\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server\",\"filename\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server/models/Point.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/rabea/Desktop/Git/location_visualizer/src/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/rabea/Desktop/Git/location_visualizer/src/server",
      "filename": "/Users/rabea/Desktop/Git/location_visualizer/src/server/models/Point.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/rabea/Desktop/Git/location_visualizer/src/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/rabea/Desktop/Git/location_visualizer/src/server/models/Point.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/rabea/Desktop/Git/location_visualizer/src/server/models/Point.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/models/",
        "sourceFileName": "Point.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// /backend/Point.js\nvar mongoose = require(\"mongoose\");\n\nvar Schema = mongoose.Schema; // this will be our data base's data structure\n\nvar DataSchema = new Schema({\n  id: Number,\n  message: String,\n  id_number: Number,\n  badge_type_desc: String,\n  x: Number,\n  y: Number,\n  room: Number,\n  floor_id: Number,\n  start_time: Number,\n  end_time: Number\n}, {\n  timestamps: true\n}, {\n  useUnifiedTopology: true\n}); // export the new Schema so we could modify it using Node.js\n\nmodule.exports = mongoose.model(\"points\", DataSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvaW50LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlNjaGVtYSIsIkRhdGFTY2hlbWEiLCJpZCIsIk51bWJlciIsIm1lc3NhZ2UiLCJTdHJpbmciLCJpZF9udW1iZXIiLCJiYWRnZV90eXBlX2Rlc2MiLCJ4IiwieSIsInJvb20iLCJmbG9vcl9pZCIsInN0YXJ0X3RpbWUiLCJlbmRfdGltZSIsInRpbWVzdGFtcHMiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRSxNQUF4QixDLENBRUE7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHLElBQUlELE1BQUosQ0FDZjtBQUNJRSxFQUFBQSxFQUFFLEVBQUVDLE1BRFI7QUFFSUMsRUFBQUEsT0FBTyxFQUFFQyxNQUZiO0FBR0lDLEVBQUFBLFNBQVMsRUFBRUgsTUFIZjtBQUlJSSxFQUFBQSxlQUFlLEVBQUVGLE1BSnJCO0FBS0lHLEVBQUFBLENBQUMsRUFBRUwsTUFMUDtBQU1JTSxFQUFBQSxDQUFDLEVBQUVOLE1BTlA7QUFPSU8sRUFBQUEsSUFBSSxFQUFFUCxNQVBWO0FBUUlRLEVBQUFBLFFBQVEsRUFBRVIsTUFSZDtBQVNJUyxFQUFBQSxVQUFVLEVBQUVULE1BVGhCO0FBVUlVLEVBQUFBLFFBQVEsRUFBRVY7QUFWZCxDQURlLEVBYWY7QUFBRVcsRUFBQUEsVUFBVSxFQUFFO0FBQWQsQ0FiZSxFQWNmO0FBQUNDLEVBQUFBLGtCQUFrQixFQUFFO0FBQXJCLENBZGUsQ0FBbkIsQyxDQWlCQTs7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsUUFBUSxDQUFDb0IsS0FBVCxDQUFlLFFBQWYsRUFBeUJqQixVQUF6QixDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmFiZWEvRGVza3RvcC9HaXQvbG9jYXRpb25fdmlzdWFsaXplci9zcmMvc2VydmVyL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvYmFja2VuZC9Qb2ludC5qc1xyXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuLy8gdGhpcyB3aWxsIGJlIG91ciBkYXRhIGJhc2UncyBkYXRhIHN0cnVjdHVyZVxyXG5jb25zdCBEYXRhU2NoZW1hID0gbmV3IFNjaGVtYShcclxuICAgIHtcclxuICAgICAgICBpZDogTnVtYmVyLFxyXG4gICAgICAgIG1lc3NhZ2U6IFN0cmluZyxcclxuICAgICAgICBpZF9udW1iZXI6IE51bWJlcixcclxuICAgICAgICBiYWRnZV90eXBlX2Rlc2M6IFN0cmluZyxcclxuICAgICAgICB4OiBOdW1iZXIsXHJcbiAgICAgICAgeTogTnVtYmVyLFxyXG4gICAgICAgIHJvb206IE51bWJlcixcclxuICAgICAgICBmbG9vcl9pZDogTnVtYmVyLFxyXG4gICAgICAgIHN0YXJ0X3RpbWU6IE51bWJlcixcclxuICAgICAgICBlbmRfdGltZTogTnVtYmVyXHJcbiAgICB9LFxyXG4gICAgeyB0aW1lc3RhbXBzOiB0cnVlIH0sXHJcbiAgICB7dXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlfVxyXG4pO1xyXG5cclxuLy8gZXhwb3J0IHRoZSBuZXcgU2NoZW1hIHNvIHdlIGNvdWxkIG1vZGlmeSBpdCB1c2luZyBOb2RlLmpzXHJcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoXCJwb2ludHNcIiwgRGF0YVNjaGVtYSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Point.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "DataSchema",
        "id",
        "Number",
        "message",
        "String",
        "id_number",
        "badge_type_desc",
        "x",
        "y",
        "room",
        "floor_id",
        "start_time",
        "end_time",
        "timestamps",
        "useUnifiedTopology",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB,C,CAEA;;AACA,IAAMC,UAAU,GAAG,IAAID,MAAJ,CACf;AACIE,EAAAA,EAAE,EAAEC,MADR;AAEIC,EAAAA,OAAO,EAAEC,MAFb;AAGIC,EAAAA,SAAS,EAAEH,MAHf;AAIII,EAAAA,eAAe,EAAEF,MAJrB;AAKIG,EAAAA,CAAC,EAAEL,MALP;AAMIM,EAAAA,CAAC,EAAEN,MANP;AAOIO,EAAAA,IAAI,EAAEP,MAPV;AAQIQ,EAAAA,QAAQ,EAAER,MARd;AASIS,EAAAA,UAAU,EAAET,MAThB;AAUIU,EAAAA,QAAQ,EAAEV;AAVd,CADe,EAaf;AAAEW,EAAAA,UAAU,EAAE;AAAd,CAbe,EAcf;AAACC,EAAAA,kBAAkB,EAAE;AAArB,CAde,CAAnB,C,CAiBA;;AACAC,MAAM,CAACC,OAAP,GAAiBnB,QAAQ,CAACoB,KAAT,CAAe,QAAf,EAAyBjB,UAAzB,CAAjB",
      "sourceRoot": "/Users/rabea/Desktop/Git/location_visualizer/src/server/models/",
      "sourcesContent": [
        "// /backend/Point.js\r\nconst mongoose = require(\"mongoose\");\r\nconst Schema = mongoose.Schema;\r\n\r\n// this will be our data base's data structure\r\nconst DataSchema = new Schema(\r\n    {\r\n        id: Number,\r\n        message: String,\r\n        id_number: Number,\r\n        badge_type_desc: String,\r\n        x: Number,\r\n        y: Number,\r\n        room: Number,\r\n        floor_id: Number,\r\n        start_time: Number,\r\n        end_time: Number\r\n    },\r\n    { timestamps: true },\r\n    {useUnifiedTopology: true}\r\n);\r\n\r\n// export the new Schema so we could modify it using Node.js\r\nmodule.exports = mongoose.model(\"points\", DataSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1591466272396
  }
}