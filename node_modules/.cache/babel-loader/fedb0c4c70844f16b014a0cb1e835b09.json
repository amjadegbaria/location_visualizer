{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport RandomUID from \"../utils/RandomUID\";\nvar prefixID = 'react-svg-pan-zoom_miniature';\n\nfunction MiniatureMask(_ref) {\n  var SVGMinX = _ref.SVGMinX,\n      SVGMinY = _ref.SVGMinY,\n      SVGWidth = _ref.SVGWidth,\n      SVGHeight = _ref.SVGHeight,\n      x1 = _ref.x1,\n      y1 = _ref.y1,\n      x2 = _ref.x2,\n      y2 = _ref.y2,\n      zoomToFit = _ref.zoomToFit,\n      _uid = _ref._uid;\n  var maskID = \"\".concat(prefixID, \"_mask_\").concat(_uid);\n  return React.createElement(\"g\", null, React.createElement(\"defs\", null, React.createElement(\"mask\", {\n    id: maskID\n  }, React.createElement(\"rect\", {\n    x: SVGMinX,\n    y: SVGMinY,\n    width: SVGWidth,\n    height: SVGHeight,\n    fill: \"#ffffff\"\n  }), React.createElement(\"rect\", {\n    x: x1,\n    y: y1,\n    width: x2 - x1,\n    height: y2 - y1\n  }))), React.createElement(\"rect\", {\n    x: SVGMinX,\n    y: SVGMinY,\n    width: SVGWidth,\n    height: SVGHeight,\n    style: {\n      stroke: \"none\",\n      fill: \"#000\",\n      mask: \"url(#\".concat(maskID, \")\"),\n      opacity: 0.4\n    }\n  }));\n}\n\nMiniatureMask.propTypes = {\n  SVGWidth: PropTypes.number.isRequired,\n  SVGHeight: PropTypes.number.isRequired,\n  SVGMinX: PropTypes.number.isRequired,\n  SVGMinY: PropTypes.number.isRequired,\n  x1: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  zoomToFit: PropTypes.number.isRequired\n};\nexport default RandomUID(MiniatureMask);","map":{"version":3,"sources":["C:/Users/AMJADE/Rabea/new-app/node_modules/react-svg-pan-zoom/build-es/ui-miniature/miniature-mask.js"],"names":["React","PropTypes","RandomUID","prefixID","MiniatureMask","_ref","SVGMinX","SVGMinY","SVGWidth","SVGHeight","x1","y1","x2","y2","zoomToFit","_uid","maskID","concat","createElement","id","x","y","width","height","fill","style","stroke","mask","opacity","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport RandomUID from \"../utils/RandomUID\";\nvar prefixID = 'react-svg-pan-zoom_miniature';\n\nfunction MiniatureMask(_ref) {\n  var SVGMinX = _ref.SVGMinX,\n      SVGMinY = _ref.SVGMinY,\n      SVGWidth = _ref.SVGWidth,\n      SVGHeight = _ref.SVGHeight,\n      x1 = _ref.x1,\n      y1 = _ref.y1,\n      x2 = _ref.x2,\n      y2 = _ref.y2,\n      zoomToFit = _ref.zoomToFit,\n      _uid = _ref._uid;\n  var maskID = \"\".concat(prefixID, \"_mask_\").concat(_uid);\n  return React.createElement(\"g\", null, React.createElement(\"defs\", null, React.createElement(\"mask\", {\n    id: maskID\n  }, React.createElement(\"rect\", {\n    x: SVGMinX,\n    y: SVGMinY,\n    width: SVGWidth,\n    height: SVGHeight,\n    fill: \"#ffffff\"\n  }), React.createElement(\"rect\", {\n    x: x1,\n    y: y1,\n    width: x2 - x1,\n    height: y2 - y1\n  }))), React.createElement(\"rect\", {\n    x: SVGMinX,\n    y: SVGMinY,\n    width: SVGWidth,\n    height: SVGHeight,\n    style: {\n      stroke: \"none\",\n      fill: \"#000\",\n      mask: \"url(#\".concat(maskID, \")\"),\n      opacity: 0.4\n    }\n  }));\n}\n\nMiniatureMask.propTypes = {\n  SVGWidth: PropTypes.number.isRequired,\n  SVGHeight: PropTypes.number.isRequired,\n  SVGMinX: PropTypes.number.isRequired,\n  SVGMinY: PropTypes.number.isRequired,\n  x1: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  zoomToFit: PropTypes.number.isRequired\n};\nexport default RandomUID(MiniatureMask);"]},"metadata":{},"sourceType":"module"}