{"ast":null,"code":"var _jsxFileName = \"/Users/rabea/Desktop/Git/location_visualizer/src/Components/Maps/Map.js\";\nimport React, { Component } from 'react';\nimport './Map.css';\nimport Marker from '../Markers/Marker';\nimport { ReactComponent as Mapimg } from \"@svgr/webpack?-svgo,+titleProp,+ref!./6thFloorMap15.svg\";\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkIn = (rooms, alarmInRooms) => {\n      // if this.state.rooms.receiver_id && this.state.rooms.receiver_id\n      alarmInRooms.map(room => this.alarm(room));\n      this.setState(prevState => ({\n        rooms: rooms,\n        alarmInRooms: alarmInRooms\n      }));\n    };\n\n    this.alarm = receiver => {\n      const roomElement = document.querySelector(`[data-name*=\"${receiver}\"]`);\n\n      if (roomElement) {\n        setInterval(function () {\n          roomElement.classList.toggle(\"backgroundRed\");\n        }, 1500);\n      }\n    };\n\n    this.state = {\n      rooms: {},\n      alarmInRooms: []\n    };\n    this.Timer = null;\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    const rooms = {};\n    const alarm = [];\n\n    if (this.props.data !== prevProps.data) {\n      this.props.data.forEach(obj => {\n        rooms[obj.receiver_id] = rooms[obj.receiver_id] ? [...rooms[obj.receiver_id], obj] : [obj];\n\n        if (rooms[obj.receiver_id].length >= 2) {\n          if (alarm.indexOf(obj.receiver_id) === -1) {\n            alarm.push(obj.receiver_id);\n          }\n        }\n      });\n      this.checkIn(rooms, alarm);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Mapimg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), this.props && this.props.data && this.props.data.length && this.props.data.map(obj => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: obj.id_number,\n        color: \"blue\",\n        x: obj.x,\n        y: obj.y,\n        name: obj.room_num + \" \",\n        id: obj.id_number + '',\n        receiver_desc: obj.receiver_desc + '',\n        receiver_id: obj.receiver_id + '',\n        badge: obj.badge_type_desc + '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rabea/Desktop/Git/location_visualizer/src/Components/Maps/Map.js"],"names":["React","Component","Marker","constructor","props","checkIn","rooms","alarmInRooms","map","room","alarm","setState","prevState","receiver","roomElement","document","querySelector","setInterval","classList","toggle","state","Timer","componentDidUpdate","prevProps","data","forEach","obj","receiver_id","length","indexOf","push","render","id_number","x","y","room_num","receiver_desc","badge_type_desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Map.css';\nimport Marker from '../Markers/Marker'\nimport { ReactComponent as Mapimg } from './6thFloorMap15.svg'\n\nexport default class extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            rooms: {},\n            alarmInRooms: [],\n        }\n        this.Timer = null;\n\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        const rooms={}\n        const alarm=[]\n        if (this.props.data !== prevProps.data) {\n            this.props.data.forEach(obj => {\n                rooms[obj.receiver_id] = rooms[obj.receiver_id] ? [...rooms[obj.receiver_id], obj] : [obj]\n                if (rooms[obj.receiver_id].length >=2){\n                    if(alarm.indexOf(obj.receiver_id) === -1) {\n                        alarm.push(obj.receiver_id)\n                    }\n                }\n            }\n            )\n            this.checkIn(rooms,alarm)\n        }\n    }\n\n    checkIn=(rooms,alarmInRooms) => {\n        // if this.state.rooms.receiver_id && this.state.rooms.receiver_id\n        alarmInRooms.map(room => this.alarm(room))\n        this.setState(prevState => ({\n            rooms: rooms,\n            alarmInRooms: alarmInRooms\n        }))\n\n    }\n    alarm = (receiver) => {\n        const roomElement = document.querySelector(`[data-name*=\"${receiver}\"]`);\n\n        if (roomElement) {\n            setInterval(function(){roomElement.classList.toggle(\"backgroundRed\")},1500);\n        }\n    };\n    render(){\n\n        return(\n            <>\n                <Mapimg />\n                {this.props && this.props.data && this.props.data.length && this.props.data.map(obj=> {\n\n                    return <Marker key={obj.id_number} color='blue' x={obj.x} y={obj.y} name={obj.room_num+\" \"} id={obj.id_number + '' } receiver_desc={obj.receiver_desc+''} receiver_id={obj.receiver_id+''} badge={obj.badge_type_desc+''}  />\n                    }\n                )}\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}