{"ast":null,"code":"var _jsxFileName = \"/Users/rabea/Desktop/Git/location_visualizer/src/Components/Maps/Map.js\";\nimport React, { Component } from 'react';\nimport './Map.css';\nimport Marker from '../Markers/Marker';\nimport { ReactComponent as Mapimg } from \"@svgr/webpack?-svgo,+titleProp,+ref!./6thFloorMap15.svg\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedDiv from \"./outlinedDiv\";\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkIn = (rooms, alarmInRooms) => {\n      // redundant code.\n      //\n      // const newAlarmState=alarmInRooms\n      // if (this.state.checked) {\n      //     this.alarm(newAlarmState)\n      //     this.Timer.forEach((t)=> clearInterval(t))\n      //     Object.keys(alarmInRooms).map((key, index) => {\n      //         if (alarmInRooms[key]) {\n      //             newAlarmState[key]=false\n      //         }\n      //     })\n      //\n      // }\n      this.setState(prevState => ({ ...prevState,\n        rooms: rooms,\n        alarmInRooms: alarmInRooms\n      }));\n    };\n\n    this.activateAlarm = checked => {\n      var ARooms = this.state.alarmInRooms;\n\n      if (checked) {\n        Object.keys(this.Timer).forEach(room => {\n          const roomElement = document.querySelector(`[data-name*=\"${room}\"]`);\n\n          if (roomElement.classList.contains('backgroundRed')) {\n            roomElement.classList.remove('backgroundRed');\n          }\n\n          clearInterval(this.Timer[room]);\n        });\n        Object.keys(ARooms).forEach(i => {\n          this.Timer[i] = setInterval(function () {\n            const roomElement = document.querySelector(`[data-name*=\"${i}\"]`);\n            roomElement.classList.toggle(\"backgroundRed\");\n          }, 1500);\n        });\n      }\n    };\n\n    this.alarm = receivers => {\n      let Rooms = this.state.alarmInRooms;\n      Object.keys(Rooms).forEach(i => {\n        this.Timer.push(setInterval(function () {\n          if (Rooms[i]) {\n            const roomElement = document.querySelector(`[data-name*=\"${i}\"]`);\n            roomElement.classList.toggle(\"backgroundRed\");\n          }\n        }, 1500));\n      });\n    };\n\n    this.handleSwitchChange = () => {\n      debugger;\n\n      if (!this.state.checked) {\n        this.activateAlarm(!this.state.checked); // Object.keys(this.state.alarmInRooms).map((key, index) => {\n        //     if (this.state.alarmInRooms[key]) {\n        //         newAlarmState[key]=false\n        //     }\n        // })\n      } else {\n        Object.keys(this.Timer).forEach(room => {\n          const roomElement = document.querySelector(`[data-name*=\"${room}\"]`);\n\n          if (roomElement.classList.contains('backgroundRed')) {\n            roomElement.classList.remove('backgroundRed');\n          }\n\n          clearInterval(this.Timer[room]);\n        });\n      }\n\n      this.setState({ ...this.state,\n        checked: !this.state.checked\n      });\n    };\n\n    this.useStyles = () => makeStyles(theme => ({\n      root: {\n        overflow: 'scroll',\n        height: '600px',\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper\n      },\n      inline: {\n        display: 'inline'\n      }\n    }));\n\n    this.state = {\n      rooms: {},\n      alarmInRooms: {},\n      checked: false\n    };\n    this.Timer = {};\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    const rooms = {};\n    const alarm = {};\n\n    if (this.props.data !== prevProps.data) {\n      this.props.data.forEach(obj => {\n        rooms[obj.receiver_id] = rooms[obj.receiver_id] ? [...rooms[obj.receiver_id], obj] : [obj];\n\n        if (rooms[obj.receiver_id].length >= 2) {\n          alarm[obj.receiver_id] = true;\n        }\n      });\n      this.checkIn(rooms, alarm);\n      this.activateAlarm(this.state.checked);\n    }\n  }\n\n  render() {\n    const classes = this.useStyles();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'dashBoardContainer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.checked,\n        onChange: this.handleSwitchChange,\n        name: \"checkedB\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 38\n        }\n      }),\n      label: \"Alert Mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: this.state.checked,\n        onChange: this.handleSwitchChange,\n        name: \"checkedA\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 38\n        }\n      }),\n      label: \"Alert Mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Mapimg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }), this.props && this.props.data && this.props.data.length && this.props.data.map(obj => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: obj.id_number,\n        color: \"blue\",\n        x: obj.x,\n        y: obj.y,\n        name: obj.room_num + \" \",\n        id: obj.id_number + '',\n        receiver_desc: obj.receiver_desc + '',\n        receiver_id: obj.receiver_id + '',\n        badge: obj.badge_type_desc + '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 36\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SummaryContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(OutlinedDiv, {\n      stylr: {\n        height: '600px',\n        overflow: 'scroll'\n      },\n      label: \"Summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, Object.keys(this.state.rooms).map((key, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        primary: key + ':' + this.state.rooms[key][0].receiver_desc,\n        secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 57\n          }\n        }, this.state.rooms[key].map(obj => {\n          return obj.id_number + ' ,';\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        variant: \"inset\",\n        component: \"li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 45\n        }\n      }));\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/rabea/Desktop/Git/location_visualizer/src/Components/Maps/Map.js"],"names":["React","Component","Marker","FormControlLabel","Switch","List","ListItem","Divider","ListItemText","makeStyles","OutlinedDiv","constructor","props","checkIn","rooms","alarmInRooms","setState","prevState","activateAlarm","checked","ARooms","state","Object","keys","Timer","forEach","room","roomElement","document","querySelector","classList","contains","remove","clearInterval","i","setInterval","toggle","alarm","receivers","Rooms","push","handleSwitchChange","useStyles","theme","root","overflow","height","width","maxWidth","backgroundColor","palette","background","paper","inline","display","componentDidUpdate","prevProps","data","obj","receiver_id","length","render","classes","map","id_number","x","y","room_num","receiver_desc","badge_type_desc","key","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Map.css';\nimport Marker from '../Markers/Marker'\nimport { ReactComponent as Mapimg } from './6thFloorMap15.svg'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedDiv from \"./outlinedDiv\";\n\nexport default class extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            rooms: {},\n            alarmInRooms: {},\n            checked:false,\n        }\n        this.Timer = {};\n\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        const rooms={}\n        const alarm={}\n        if (this.props.data !== prevProps.data) {\n            this.props.data.forEach(obj => {\n                rooms[obj.receiver_id] = rooms[obj.receiver_id] ? [...rooms[obj.receiver_id], obj] : [obj]\n                if (rooms[obj.receiver_id].length >=2){\n                    alarm[obj.receiver_id]=true\n                }\n            }\n            )\n            this.checkIn(rooms,alarm)\n            this.activateAlarm(this.state.checked)\n        }\n    }\n\n    checkIn=(rooms,alarmInRooms) => {\n        // redundant code.\n        //\n        // const newAlarmState=alarmInRooms\n        // if (this.state.checked) {\n        //     this.alarm(newAlarmState)\n        //     this.Timer.forEach((t)=> clearInterval(t))\n        //     Object.keys(alarmInRooms).map((key, index) => {\n        //         if (alarmInRooms[key]) {\n        //             newAlarmState[key]=false\n        //         }\n        //     })\n        //\n        // }\n        this.setState(prevState => ({\n            ...prevState,\n            rooms: rooms,\n            alarmInRooms: alarmInRooms\n        }))\n\n\n    }\n    activateAlarm= (checked) => {\n        var ARooms = this.state.alarmInRooms\n        if (checked) {\n            Object.keys(this.Timer).forEach((room)=> {\n                const roomElement = document.querySelector(`[data-name*=\"${room}\"]`);\n                if (roomElement.classList.contains('backgroundRed')) {\n                    roomElement.classList.remove('backgroundRed');\n                }\n                clearInterval(this.Timer[room])\n            })\n            Object.keys(ARooms).forEach((i) => {\n                this.Timer[i] = setInterval(function () {\n                        const roomElement = document.querySelector(`[data-name*=\"${i}\"]`);\n                        roomElement.classList.toggle(\"backgroundRed\")\n                },1500)\n            })\n        }\n    }\n\n    alarm = (receivers) => {\n        let Rooms = this.state.alarmInRooms\n        Object.keys(Rooms).forEach((i) => {\n            this.Timer.push(setInterval(function () {\n                if (Rooms[i]) {\n                    const roomElement = document.querySelector(`[data-name*=\"${i}\"]`);\n                    roomElement.classList.toggle(\"backgroundRed\")\n                }\n            },1500))\n        })\n\n    };\n\n    handleSwitchChange = () =>{\n\n        debugger;\n        if (!this.state.checked) {\n            this.activateAlarm(!this.state.checked)\n            // Object.keys(this.state.alarmInRooms).map((key, index) => {\n            //     if (this.state.alarmInRooms[key]) {\n            //         newAlarmState[key]=false\n            //     }\n            // })\n        }\n        else{\n            Object.keys(this.Timer).forEach((room)=> {\n                const roomElement = document.querySelector(`[data-name*=\"${room}\"]`);\n                if (roomElement.classList.contains('backgroundRed')) {\n                    roomElement.classList.remove('backgroundRed');\n                }\n                clearInterval(this.Timer[room])\n            })        }\n\n        this.setState({\n            ...this.state,\n            checked:!this.state.checked,\n        })\n    }\n    useStyles = () =>\n        makeStyles((theme) => ({\n            root: {\n                overflow:'scroll',\n                height:'600px',\n                width: '100%',\n                maxWidth: '36ch',\n                backgroundColor: theme.palette.background.paper,\n            },\n            inline: {\n                display: 'inline',\n            },\n        }));\n\n    render(){\n        const classes = this.useStyles();\n\n        return(\n            <>\n                <div className='pageContainer'>\n                    <div className={'dashBoardContainer'}>\n                        <FormControlLabel\n                            control={<Switch checked={this.state.checked} onChange={this.handleSwitchChange} name=\"checkedB\" />}\n                            label=\"Alert Mode\"\n                        />\n                    </div>\n                    <div className='mapContainer'>\n                        <FormControlLabel\n                            control={<Switch checked={this.state.checked} onChange={this.handleSwitchChange} name=\"checkedA\" />}\n                            label=\"Alert Mode\"\n                        />\n                        <Mapimg />\n                        {this.props && this.props.data && this.props.data.length && this.props.data.map(obj=> {\n\n                            return <Marker key={obj.id_number} color='blue' x={obj.x} y={obj.y} name={obj.room_num+\" \"} id={obj.id_number + '' } receiver_desc={obj.receiver_desc+''} receiver_id={obj.receiver_id+''} badge={obj.badge_type_desc+''}  />\n                            }\n                        )}\n                    </div>\n                    <div className='SummaryContainer'>\n                        <OutlinedDiv stylr={{height: '600px', overflow: 'scroll'}} label=\"Summary\">\n                            <List className={classes.root}>\n                            {\n                                Object.keys(this.state.rooms).map((key, index) => {\n                                return(\n                                    <>\n                                            <ListItem alignItems=\"flex-start\">\n                                                {/*<ListItemAvatar>*/}\n                                                {/*    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />*/}\n                                                {/*</ListItemAvatar>*/}\n                                                <ListItemText\n                                                    primary={key + ':'+ this.state.rooms[key][0].receiver_desc}\n                                                    secondary={\n                                                        <React.Fragment>\n                                                            {this.state.rooms[key].map( obj => {\n                                                                return obj.id_number+ ' ,'\n                                                            })}\n                                                        </React.Fragment>\n                                                    }\n                                                />\n                                            </ListItem>\n                                            <Divider variant=\"inset\" component=\"li\" />\n                                    </>\n                                        )\n                            })}\n                            </List>\n                        </OutlinedDiv>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}